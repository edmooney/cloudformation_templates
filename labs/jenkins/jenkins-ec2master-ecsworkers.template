---
AWSTemplateFormatVersion: 2010-09-09
Description: Jenkins Stack Template with EC2 Master and ECS Workers v20161017-1100
Parameters:
  # Tags
  TagOwner:
    Description: Owner Contact Tag
    Type: String
  TagProject:
    Description: Application Name Tag
    Type: String
  TagDeleteAfter:
    Description: Environment Name Tag
    Type: String
  # Shared
  WrapperStackName:
    Description: Nested Stack name. To Deal with 32 character ELB Name limit.
    Type: String
    Default: wrapperstack
  VpcId:
    Description: VPC ID to use.
    Type: AWS::EC2::VPC::Id
  S3DeployBucketName:
    Description: S3 Bucket Name for Federated Jenkins Launcher Deployment
    Type: String
  S3DeployBucketRegion:
    Description: Region where the artifact bucket exists
    Type: String
  CookbookVersion:
    Description: Version of cookbook to deploy
    Type: String
  # Master
  MasterAmiId:
    Description: Master AMI ID
    Type: String
  MasterSubnetId1:
    Description: Master Subnet ID 1
    Type: AWS::EC2::Subnet::Id
  MasterSubnetId2:
    Description: Master Subnet ID 2
    Type: AWS::EC2::Subnet::Id
  ## TODO: Add Condition for 3rd Subnet
  MasterSecurityGroupId:
    Description: Master EC2 Instance Security Group
    Type: AWS::EC2::SecurityGroup::Id
  MasterElbSecurityGroupId:
    Description: Master ELB Security Group
    Type: AWS::EC2::SecurityGroup::Id
  MasterEc2Key:
    Description: Master EC2 keypair to use (Leave blank for no SSH access)
    Type: String
  MasterIamProfile:
    Description: Master IAM Role EC2 Instance Profile
    Type: String
  JenkinsVersion:
    Description: Jenkins Master Package Version
    Type: String
    Default: 2.7.4-1.1
  InstallBasePlugins:
    Description: Select whether to install Base plugins on Master or not
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  MasterElbSubnetId1:
    Description: ELB Subnet ID 1
    Type: AWS::EC2::Subnet::Id
  MasterElbSubnetId2:
    Description: ELB Subnet ID 2
    Type: AWS::EC2::Subnet::Id
  ## TODO: Add Condition for 3rd Subnet
  MasterInstanceType:
    Description: Master Instance Type
    Type: String
    Default: m3.medium
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
  # Worker
  WorkerAmiId:
    Description: Worker AMI ID
    Type: String
  WorkerSubnetId1:
    Description: Worker Subnet ID
    Type: AWS::EC2::Subnet::Id
  WorkerSubnetId2:
    Description: Worker Subnet ID
    Type: AWS::EC2::Subnet::Id
  ## TODO: Add Condition for 3rd Subnet
  WorkerSecurityGroupId:
    Description: Worker EC2 Instance Security Group
    Type: AWS::EC2::SecurityGroup::Id
  WorkerEc2Key:
    Description: Worker EC2 keypair to use (Leave blank for no SSH access)
    Type: String
    Default: federatedjenkins-horizontal-dev-useast1
  WorkerIamProfile:
    Description: Worker IAM Role EC2 Instance Profile
    Type: String
    Default: CapOne-InstanceProfile-Default
#  WorkerEcsServiceRole:
#    Description: Worker IAM Role EC2 Instance Profile
#    Type: String
#    Default: CapOne-Horizontal-Dev-CustomRole-ecsServiceRole
  WorkerMinCount:
    Type: Number
    Default: 1
    Description: Worker minimum instance count for autoscaling
  WorkerMaxCount:
    Type: Number
    Default: 4
    Description: Worker maximum instance count for autoscaling
  WorkerInstanceType:
    Description: Worker Instance Type
    Type: String
    Default: m3.medium
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
Conditions:
  HasMasterEc2Key:
    !Not [!Equals [ !Ref MasterEc2Key, '' ]]
  HasWorkerEc2Key:
    !Not [!Equals [ !Ref WorkerEc2Key, '' ]]
  SetupPlugins: !Equals [!Ref InstallBasePlugins, true]
Resources:
  MasterLoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        Scheme: internal
        Subnets:
          - !Ref MasterElbSubnetId1
          - !Ref MasterElbSubnetId2
        SecurityGroups:
          - !Ref MasterElbSecurityGroupId
    MasterLoadBalancerListener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      DependsOn:
        - MasterLoadBalancer
        - MasterLoadBalancerTargetGroup
      Properties:
        DefaultActions:
          - Type: forward
            TargetGroupArn: !Ref MasterLoadBalancerTargetGroup
        LoadBalancerArn: !Ref MasterLoadBalancer
        Port: 80
        Protocol: HTTP
    MasterLoadBalancerTargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        HealthCheckIntervalSeconds: 10
        HealthCheckProtocol: HTTP
        HealthCheckPort: 8080
        HealthCheckTimeoutSeconds: 5
        HealthyThresholdCount: 3
        UnhealthyThresholdCount: 6
        Port: 8080
        Protocol: HTTP
        VpcId: !Ref VpcId
    MasterAutoScalingGroup:
      Type: AWS::AutoScaling::AutoScalingGroup
      DependsOn:
        - MasterLoadBalancerTargetGroup
        - MasterInstances
      Properties:
        VPCZoneIdentifier:
          - !Ref MasterSubnetId1
          - !Ref MasterSubnetId2
        LaunchConfigurationName: !Ref MasterInstances
        MinSize: 1
        MaxSize: 1
        DesiredCapacity: 1
        Tags:
          - Key: Name
            Value: !Join [ '', [ !Ref "AWS::StackName", -master ] ]
            PropagateAtLaunch: true
          - Key: OwnerContact
            Value: !Ref TagOwnerContact
            PropagateAtLaunch: true
          - Key: ASV
            Value: !Ref TagASV
            PropagateAtLaunch: true
          - Key: CMDBEnvironment
            Value: !Ref TagCMDBEnvironment
            PropagateAtLaunch: true
          - Key: ApplicationName
            Value: !Ref TagApplicationName
            PropagateAtLaunch: true
          - Key: EnvironmentName
            Value: !Ref TagEnvironmentName
            PropagateAtLaunch: true
        TargetGroupARNs:
          - !Ref MasterLoadBalancerTargetGroup
      UpdatePolicy:
        AutoScalingRollingUpdate:
          MinInstancesInService: 1
          MaxBatchSize: 1
    MasterInstances:
      Type: AWS::AutoScaling::LaunchConfiguration
      DependsOn:
        - MasterLoadBalancer
        - WorkerAutoScalingGroup
      Metadata:
        AWS::CloudFormation::Init:
          config:
            commands:
              01_mkdir_chef_repo:
                command: "mkdir /opt/chef-repo"
              02_mkdir_chef_repo_subdirs:
                cwd: /opt/chef-repo
                command: "mkdir cookbooks checksums environments cache backup data_bags roles"
              03_deploy_cookbooks:
                cwd: /opt/chef-repo
                command: !Sub "aws s3 sync s3://${S3DeployBucketName}/cookbooks/bonusbits_jenkins_cookbooks-${CookbookVersion}.tar.gz /opt/chef-repo/cookbooks.tar.gz && tar -zxf /opt/chef-repo/cookbooks.tar.gz -C /opt/chef-repo"
              04_run_chef:
                cwd: /opt/chef-repo
                command: "/opt/chef/bin/chef-client -z -o 'role[bonusbits_jenkins]' --environment bonusbits_jenkins_master --config /opt/chef-repo/client.rb --log_level info --force-formatter --chef-zero-port 8889"
            files:
              "/opt/chef-repo/client.rb":
                content: !Sub |
                  node_name 'federated-jenkins-launcher'
                  checksum_path '/opt/chef-repo/checksums'
                  file_cache_path '/opt/chef-repo/cache'
                  file_backup_path '/opt/chef-repo/backup'
                  cookbook_path '/opt/chef-repo/cookbooks'
                  data_bag_path '/opt/chef-repo/data_bags'
                  environment_path '/opt/chef-repo/environments'
                  role_path '/opt/chef-repo/roles'
                  chef_server_url 'http://127.0.0.1:8889'
                  encrypted_data_bag_secret '/opt/chef-repo/cookbooks/bonusbits_jenkins/test/data_bags/encrypted_data_bag_secret'
              "/opt/chef-repo/environments/bonusbits_jenkins_master.json":
                content: !Sub |
                  {
                    "name": "bonusbits_jenkins_master",
                    "description": "Example Environment",
                    "cookbook_versions": {},
                    "json_class": "Chef::Environment",
                    "chef_type": "environment",
                    "default_attributes": {
                    },
                    "override_attributes": {
                      "bonusbits-jenkins": {
                        "role": "master",
                        "master": {
                          "users": {
                            "create_default_admin": true
                          },
                          "plugins": {
                            "deploy_base": true
                          },
                          "setup_wizard": {
                            "disable": true
                          },
                          "rpm": {
                            "version": "${!Ref JenkinsVersion}"
                          },
                          "ecs_cluster": {
                            "configure": true
                          }
                        },
                        "worker": {
                          "ecs_agent": {
                            "configure": false
                          },
                          "cluster_url": "${WorkerCluster}"
                        },
                        "gem_source": {
                          "use_internal": true
                        }
                      }
                    }
                  }
              "/opt/chef-repo/roles/bonusbits_jenkins.json":
                content: !Sub |
                  {
                    "name": "bonusbits-jenkins",
                    "description": "Default Role",
                    "json_class": "Chef::Role",
                    "default_attributes": {},
                    "override_attributes": {
                    },
                    "chef_type": "role",
                    "run_list": [
                      "recipe[bonusbits-jenkins]"
                    ],
                    "env_run_lists": {
                    }
                  }
              "/etc/cfn/cfn-hup.conf":
                content: !Sub |
                  [main]
                  stack=${AWS::StackId}
                  region=${AWS::Region}
                mode: '000400'
                owner: root
                group: root
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
                content: !Sub |
                  [cfn-auto-reloader-hook]
                  triggers=post.update
                  path=Resources.MasterInstances.Metadata.AWS::CloudFormation::Init
                  action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MasterInstances --region ${AWS::Region}
                  runas=root
              services:
                sysvinit:
                  cfn-hup:
                    enabled: true
                    ensureRunning: true
                    files:
                      - /etc/cfn/cfn-hup.conf
                      - /etc/cfn/hooks.d/cfn-auto-reloader.conf
    Properties:
      ImageId: !Ref MasterAmiId
      SecurityGroups:
        - !Ref MasterSecurityGroupId
      InstanceType: !Ref MasterInstanceType
      IamInstanceProfile: !Ref MasterIamProfile
      KeyName: !If [ HasMasterEc2Key, !Ref MasterEc2Key, !Ref "AWS::NoValue"]
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            yum install -y aws-cfn-bootstrap awscli curl wget mlocate ca-certificates openssl vim git yum-utils nfs-utils cloud-init
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MasterInstances --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource MasterAutoScalingGroup --region ${AWS::Region}
  WorkerCluster:
    Type: AWS::ECS::Cluster
  WorkerAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref WorkerSubnetId1
        - !Ref WorkerSubnetId2
      LaunchConfigurationName: !Ref WorkerInstances
      MinSize: !Ref WorkerMinCount
      MaxSize: !Ref WorkerMaxCount
      DesiredCapacity: !Ref WorkerMinCount
      Tags:
        -
          Key: Name
          Value: !Join [ "", [ !Ref "AWS::StackName", -workers ] ]
          PropagateAtLaunch: true
        -
          Key: OwnerContact
          Value: !Ref TagOwner
          PropagateAtLaunch: true
        -
          Key: ASV
          Value: !Ref TagASV
          PropagateAtLaunch: true
        -
          Key: CMDBEnvironment
          Value: !Ref TagCMDBEnvironment
          PropagateAtLaunch: true
        -
          Key: ApplicationName
          Value: !Ref TagProject
          PropagateAtLaunch: true
        -
          Key: EnvironmentName
          Value: !Ref TagDeleteAfter
          PropagateAtLaunch: true
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
  WorkerInstances:
    DependsOn:
      - WorkerCluster
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        config:
          commands:
            01_install_ecs_agent:
              command: !Sub |
                #!/bin/bash
                yum install -y ecs-init
            02_start_docker_service:
              command: !Sub |
                #!/bin/bash
                service docker start
            03_start_ecs:
              command: !Sub |
                #!/bin/bash
                start ecs
            04_add_instance_to_cluster:
              command: !Sub |
                #!/bin/bash
                echo ECS_CLUSTER=${WorkerCluster}  >> /etc/ecs/ecs.config
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.WorkerInstances.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WorkerInstances --region ${AWS::Region}
                runas=root
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
    Properties:
      ImageId: !Ref WorkerAmiId
      SecurityGroups:
        - !Ref WorkerSecurityGroupId
      InstanceType: !Ref WorkerInstanceType
      IamInstanceProfile: !Ref WorkerIamProfile
      KeyName: !If [ HasWorkerEc2Key, !Ref WorkerEc2Key, !Ref "AWS::NoValue"]
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WorkerInstances --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WorkerAutoScalingGroup --region ${AWS::Region}
  WorkerScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WorkerAutoScalingGroup
      Cooldown: 300
      ScalingAdjustment: 1
  WorkerScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WorkerAutoScalingGroup
      Cooldown: 300
      ScalingAdjustment: -1
  WorkerMemoryAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale-up if Memory > 80% for 5 minutes
      MetricName: MemoryReservation
      Namespace: AWS/ECS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 80
      AlarmActions:
        - !Ref WorkerScaleUpPolicy
      Dimensions:
        - Name: ClusterName
          Value: !Ref WorkerCluster
      ComparisonOperator: GreaterThanThreshold
  WorkerMemoryAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale-down if Memory < 30% for 5 minutes
      MetricName: MemoryReservation
      Namespace: AWS/ECS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 30
      AlarmActions:
        - !Ref WorkerScaleDownPolicy
      Dimensions:
        - Name: ClusterName
          Value: !Ref WorkerCluster
      ComparisonOperator: LessThanThreshold
Outputs:
  MasterURL:
    Description: Jenkins Master ELB URL
    Value: !Sub http://${MasterELB.DNSName}
  WorkerCluster:
    Description: Worker Cluster
    Value: !Ref WorkerCluster
  Owner:
    Description: Owner Contact
    Value: !Ref TagOwner
  ASV:
    Description: ASV
    Value: !Ref TagASV
  CMDBEnvironment:
    Description: CMDB Environment
    Value: !Ref TagCMDBEnvironment
  ApplicationName:
    Description: Application Name
    Value: !Ref TagProject
  MasterAmiId:
    Description: Master - AMI ID
    Value: !Ref MasterAmiId
  MasterInstanceType:
    Description: Master - Instance Type
    Value: !Ref MasterInstanceType
  MasterSubnetId1:
    Description: Master - Subnet ID 1
    Value: !Ref MasterSubnetId1
  MasterSubnetId2:
    Description: Master - Subnet ID 2
    Value: !Ref MasterSubnetId2
  MasterEc2Key:
    Description: Master - EC2 SSH Key
    Value: !Ref MasterEc2Key
  MasterSecurityGroupId:
    Description: Master - Security Group ID
    Value: !Ref MasterSecurityGroupId
  MasterIamProfile:
    Description: Master - IAM EC2 Instance Profile
    Value: !Ref MasterIamProfile
  JenkinsVersion:
    Description: Master - Jenkins Version
    Value: !Ref JenkinsVersion
  InstallBasePlugins:
    Description: Master - Install Base Plugins
    Value: !Ref InstallBasePlugins
  MasterElbSubnetId1:
    Description: Master - ELB Subnet ID 1
    Value: !Ref MasterElbSubnetId1
  MasterElbSubnetId2:
    Description: Master - ELB Subnet ID 2
    Value: !Ref MasterElbSubnetId2
  MasterElbSecurityGroupId:
    Description: Master - ELB Security Group ID
    Value: !Ref MasterElbSecurityGroupId
  WorkerAmiId:
    Description: Worker - AMI ID
    Value: !Ref WorkerAmiId
  WorkerInstanceType:
    Description: Worker - Instance Type
    Value: !Ref WorkerInstanceType
  WorkerSubnetId1:
    Description: Worker - Subnet ID 1
    Value: !Ref WorkerSubnetId1
  WorkerSubnetId2:
    Description: Worker - Subnet ID 2
    Value: !Ref WorkerSubnetId2
  WorkerEc2Key:
    Description: Worker - EC2 SSH Key
    Value: !Ref WorkerEc2Key
  WorkerSecurityGroupId:
    Description: Worker - Security Group ID
    Value: !Ref WorkerSecurityGroupId
  WorkerIamProfile:
    Description: Worker - IAM EC2 Instance Profile
    Value: !Ref WorkerIamProfile
  VpcId:
    Description: Shared - VPC ID
    Value: !Ref VpcId
  S3DeployBucketName:
    Description: Shared - S3 Deploy Bucket Name
    Value: !Ref S3DeployBucketName
  S3DeployBucketRegion:
    Description: Shared - S3 Deploy Bucket Region
    Value: !Ref S3DeployBucketRegion
  CookbookVersion:
    Description: Shared - Chef Cookbook Version
    Value: !Ref CookbookVersion
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    -
      Label:
        default: Tags (Required)
      Parameters:
        - TagOwner
        - TagASV
        - TagCMDBEnvironment
        - TagProject
        - TagDeleteAfter
    -
      Label:
        default: Jenkins Master
      Parameters:
        - MasterAmiId
        - MasterInstanceType
        - MasterSubnetId1
        - MasterSubnetId2
        - MasterEc2Key
        - MasterSecurityGroupId
        - MasterIamProfile
        - JenkinsVersion
        - InstallBasePlugins
        - MasterElbSubnetId1
        - MasterElbSubnetId2
        - MasterElbSecurityGroupId
    -
      Label:
        default: Jenkins Worker
      Parameters:
        - WorkerAmiId
        - WorkerInstanceType
        - WorkerSubnetId1
        - WorkerSubnetId2
        - WorkerEc2Key
        - WorkerSecurityGroupId
        - WorkerIamProfile
        - WorkerMinCount
        - WorkerMaxCount
    -
      Label:
        default: Shared Configuration
      Parameters:
        - VpcId
        - S3DeployBucketName
        - S3DeployBucketRegion
        - CookbookVersion
    ParameterLabels:
      TagOwner:
        default: Team or Individual Contact Owner
      TagASV:
        default: ASV
      TagCMDBEnvironment:
        default: CM DB Environment
      TagProject:
        default: Application Name
      TagDeleteAfter:
        default: Environment Name
      MasterAmiId:
        default: Master - AMI
      MasterInstanceType:
        default: Master - Instance Type
      MasterSubnetId1:
        default: Master - Subnet ID 1
      MasterSubnetId2:
        default: Master - Subnet ID 2
      MasterEc2Key:
        default: Master - EC2 SSH Key
      MasterSecurityGroupId:
        default: Master - Security Group ID
      MasterIamProfile:
        default: Master - IAM Instance Profile
      JenkinsVersion:
        default: Master - Jenkins Version
      InstallBasePlugins:
        default: Master - Install Base Plugins
      MasterElbSubnetId1:
        default: Master - ELB Subnet ID 1
      MasterElbSubnetId2:
        default: Master - ELB Subnet ID 2
      MasterElbSecurityGroupId:
        default: Master - ELB Security Group ID
      WorkerAmiId:
        default: Worker - AMI
      WorkerInstanceType:
        default: Worker - Instance Type
      WorkerSubnetId1:
        default: Worker - Subnet ID 1
      WorkerSubnetId2:
        default: Worker - Subnet ID 2
      WorkerEc2Key:
        default: Worker - EC2 SSH Key
      WorkerSecurityGroupId:
        default: Worker - Security Group ID
      WorkerIamProfile:
        default: Worker - IAM Instance Profile
      WorkerMinCount:
        default: Worker - Minimum Cluster Instance Count
      WorkerMaxCount:
        default: Worker - Maximum Cluster Instance Count
      VpcId:
        default: Shared - VPC ID
      S3DeployBucketName:
        default: Shared - S3 Deploy Bucket Name
      S3DeployBucketRegion:
        default: Shared - S3 Deploy Bucket Region
      CookbookVersion:
        default: Shared - Chef Cookbook Version
